{"version":3,"sources":["components/loadingComponent.js","shared/baseurl.js","components/homeComponent.js","components/menuComponenet.js","components/dishDetailComponenet.js","components/headerComponent.js","components/footerComponent.js","components/contactComponent.js","components/aboutComponent.js","Redux/ActionCreators.js","Redux/Actiontypes.js","components/mainComponent.js","Redux/dishes.js","Redux/promotions.js","Redux/leaders.js","Redux/comments.js","Redux/forms.js","Redux/configureStore.js","App.js","serviceWorker.js","index.js"],"names":["Loading","className","baseUrl","RenderCard","item","isLoading","errMess","in","transformProps","exittransform","Card","CardImg","src","image","alt","name","CardBody","CardTitle","designation","CardSubtitle","CardText","description","Home","props","console","log","JSON","stringify","dish","dishesLoading","dishesErrmess","promotion","promosLoading","promosErrmess","leader","leadersLoading","leadersErrmess","RenderMenuItem","key","id","to","CardImgOverlay","Menu","menu","dishes","map","errmess","Breadcrumb","BreadcrumbItem","active","maxLength","len","val","length","CommentForm","state","isModalOpen","toggleModal","bind","handleSubmit","this","setState","values","postComments","dishId","rating","authorname","comment","Button","onClick","outline","Modal","isOpen","toggle","ModalHeader","ModalBody","onSubmit","FormGroup","Label","htmlFor","md","select","model","v","text","validators","minlength","show","messages","textarea","placeholder","rows","color","type","Component","RenderDishDetail","RenderComments","comments","cmnts","author","Intl","DateTimeFormat","year","month","day","format","Date","date","DishDetail","isloading","Header","isNavOpen","togglenav","handleLogin","event","alert","username","value","password","remember","checked","preventDefault","Fragment","Navbar","dark","expand","NavbarToggler","NavbarBrand","href","height","width","Collapse","navbar","Nav","NavItem","Jumbotron","Form","Input","innerRef","input","check","Footer","required","minLength","isNumber","isNaN","Number","validEmail","test","Contact","postFeedback","firstname","lastname","telnum","email","agree","contactType","message","resetFeedbackForm","role","Row","size","offset","checkbox","RenderLeader","Media","tag","left","middle","object","body","heading","About","leaders","CardHeader","title","list","dishesFailed","payload","addDishes","commentsFailed","addComments","promosFailed","addPromos","promos","leadersFailed","addLeaders","Main","fetchDishes","fetchComments","fetchPromos","fetchLeaders","selectedDish","TransitionGroup","CSSTransition","location","classNames","timeout","path","component","filter","featured","promotions","promo","exact","match","parseInt","params","commentsErrmess","withRouter","connect","dispatch","dsihId","newComment","toISOString","fetch","method","headers","credentials","then","response","ok","error","Error","status","statusText","json","addComment","catch","actions","reset","newFeedback","Dishes","action","Promotions","Leaders","Comments","concat","InitialFeedback","store","createStore","combineReducers","createForms","feedback","applyMiddleware","thunk","logger","App","Boolean","window","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.dcae1514.chunk.js","sourcesContent":["import React from 'react';\r\n\r\n\r\nconst Loading = () => {\r\n    return(\r\n        <div className=\"col-12\">\r\n            <span className=\"fa fa-spinner fa-pulse fa-3x fa-fw text-primary\"></span>\r\n            <p>loading...</p> \r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Loading;","\r\n\r\nexport const baseUrl = \"http://localhost:3000/\";","import React from 'react';\r\nimport { Card, CardImg, CardText, CardBody, CardTitle, CardSubtitle } from 'reactstrap'\r\nimport Loading from './loadingComponent'\r\nimport {baseUrl} from '../shared/baseurl'\r\nimport {FadeTransform } from 'react-animation-components'\r\n\r\nfunction RenderCard({ item, isLoading, errMess }) {\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <Loading />\r\n    );\r\n  }\r\n  else if (errMess) {\r\n    return(\r\n    <h4>{errMess}</h4>\r\n    )}\r\n  else\r\n    return (\r\n      <FadeTransform in \r\n        transformProps={{\r\n          exittransform: 'scale(0.5) translateY(-50%)'\r\n        }}>\r\n      <Card>\r\n        <CardImg src={baseUrl + item.image} alt={item.name} />\r\n        <CardBody>\r\n          <CardTitle>{item.name}</CardTitle>\r\n          {item.designation ? <CardSubtitle>{item.designation}</CardSubtitle> : null}\r\n          <CardText>{item.description}</CardText>\r\n        </CardBody>\r\n      </Card>\r\n      </FadeTransform>\r\n    )\r\n}\r\n\r\nfunction Home(props) {\r\n  console.log(\"Props is \" + JSON.stringify(props)  )\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"row align-item-start\">\r\n        <div className=\"col-12 col-md m-1\">\r\n          <RenderCard item={props.dish} \r\n            isLoading={props.dishesLoading}\r\n            errMess={props.dishesErrmess}\r\n          />\r\n        </div>\r\n        <div className=\"col-12 col-md m-1\">\r\n          <RenderCard item={props.promotion}\r\n            isLoading={props.promosLoading}\r\n            errMess={props.promosErrmess}\r\n          />\r\n        </div>\r\n        <div className=\"col-12 col-md m-1\">\r\n          <RenderCard item={props.leader}\r\n            isLoading={props.leadersLoading}\r\n            errMess={props.leadersErrmess}\r\n           />\r\n        </div>\r\n      </div>\r\n      {/* {console.log(props.leader.name)} */}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;   ","import React, { Component } from 'react'\nimport { Card, CardImg, CardImgOverlay, CardTitle,Breadcrumb, BreadcrumbItem } from '../../node_modules/reactstrap';\nimport { Link } from 'react-router-dom'\nimport Loading  from './loadingComponent'\nimport {baseUrl} from '../shared/baseurl'\n\n\nfunction RenderMenuItem({ dish }) {\n    return (\n        <div key={dish.id} className=\"col-12 col-md-5 mt-1\">\n            <Card>\n                <Link to={`/menu/${dish.id}`} >\n                    <CardImg src={baseUrl + dish.image}></CardImg>\n                    <CardImgOverlay>\n                        <CardTitle>{dish.name}</CardTitle>\n                    </CardImgOverlay>\n                </Link>\n            </Card>\n        </div>\n    );\n}\n\nconst Menu = (props) => {\n\n    const menu = props.dishes.dishes.map((dish) => {\n        return (\n            <RenderMenuItem dish={dish} key={dish.id} />\n        );\n    }\n    );\n    if (props.dishes.isLoading) {\n        return (\n            <div className=\"container\">\n                <div className=\"row\">\n                    <Loading />\n                </div>\n            </div>\n        )\n    }\n\n    else if (props.dishes.errmess) {\n        return (\n            <div className=\"container\">\n                <div className=\"row\">\n                    <h4>{props.dishes.errmess}</h4>\n                </div>\n            </div>\n        )\n    }\n\n    else\n        return (\n            <div className='container'>\n                <div className='row'>\n                    <Breadcrumb>\n                        <BreadcrumbItem><Link to='/home'>Home</Link></BreadcrumbItem>\n                        <BreadcrumbItem active>Menu</BreadcrumbItem>\n                    </Breadcrumb>\n                    <div className='col-12'>\n                        <h3>Menu</h3>\n                    </div>\n                </div>\n                <div className='row'>\n                    {menu}\n                </div>\n            </div>\n        );\n}\n\n\nexport default Menu;","import React, { Component } from 'react'\nimport { Card, CardImg, CardText, CardBody, CardTitle, Label, Breadcrumb, BreadcrumbItem, Button, Modal, ModalHeader, ModalBody, FormGroup } from '../../node_modules/reactstrap';\nimport { Link } from 'react-router-dom'\nimport { Control, LocalForm, Errors } from 'react-redux-form'\nimport Col from 'reactstrap/lib/Col';\nimport Loading from './loadingComponent'\nimport { baseUrl } from '../shared/baseurl'\nimport { FadeTransform, Fade, Stagger } from 'react-animation-components'\n\n\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\nconst minLength = (len) => (val) => !(val) || (val.length >= len);\n\n\nclass CommentForm extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            isModalOpen: false\n        };\n\n        this.toggleModal = this.toggleModal.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n\n    toggleModal() {\n        this.setState({\n            isModalOpen: !this.state.isModalOpen,\n        });\n    };\n\n    handleSubmit(values) {\n        this.toggleModal();\n        // alert(JSON.stringify(values));\n        this.props.postComments(this.props.dishId, values.rating, values.authorname, values.comment)\n\n    };\n\n    render() {\n        return (\n            <>\n                <div>\n                    <Button onClick={this.toggleModal} outline >\n                        <span className=\"fa fa-comments fa-lg\"></span> Submit Comment\n                </Button>\n                </div>\n                <div>\n                    <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\n                        <ModalHeader toggle={this.toggleModal}>Submit Comments</ModalHeader>\n                        <ModalBody>\n                            <LocalForm onSubmit={(values) => this.handleSubmit(values)}>\n                                <FormGroup>\n                                    <Label htmlFor=\"rating\" md={2}>Rating</Label>\n                                    <Col md={10}>\n                                        <Control.select model=\".rating\" name=\"rating\" v className=\"form-control\" >\n\n                                            <option>1</option>\n                                            <option>2</option>\n                                            <option>3</option>\n                                            <option>4</option>\n                                            <option>5</option>\n\n                                        </Control.select>\n                                    </Col>\n                                </FormGroup>\n                                <FormGroup>\n                                    <Label htmlFor=\"authorname\" md={2}>Your Name</Label>\n                                    <Col md={10}>\n                                        <Control.text model=\".authorname\"\n                                            name=\"authorname\"\n                                            id=\"authorname\"\n                                            className=\"form-control\"\n                                            validators={{\n                                                minlength: minLength(3), maxLength: maxLength(15)\n                                            }}\n\n                                        ></Control.text>\n                                        <Errors\n                                            className=\"text-danger\"\n                                            model=\".authorname\"\n                                            show=\"touched\"\n                                            messages={{\n                                                minlength: \" Must be greater than 2 Characters\",\n                                                maxLength: \" Must be atleast 15 charecters or less\",\n                                            }}\n                                        />\n                                    </Col>\n                                </FormGroup>\n                                <FormGroup>\n                                    <Label htmlFor=\"comment\" md={2}>Comment</Label>\n                                    <Col md={10}>\n                                        <Control.textarea model=\".comment\" name='comment' id=\"comment\" placeholder=\"Your Message Here\" rows=\"6\"\n                                            className=\"form-control\"\n                                        />\n                                    </Col>\n                                </FormGroup>\n                                <FormGroup>\n                                    <Col md={10}>\n                                        <Button color=\"primary\" type=\"submit\" >Submit</Button>\n                                    </Col>\n                                </FormGroup>\n                            </LocalForm>\n                        </ModalBody>\n                    </Modal>\n                </div>\n            </>\n        );\n\n    }\n}\n\nfunction RenderDishDetail({ dish }) {\n    if (dish != null) {\n        return (\n            <FadeTransform in\n                transformProps={{\n                    exittransform: 'scale(0.5) translateY(-50%)'\n                }}>\n                <Card>\n                    <CardImg src={baseUrl + dish.image}></CardImg>\n                    <CardBody>\n                        <CardTitle>{dish.name}</CardTitle>\n                        <CardText>{dish.description}</CardText>\n                    </CardBody>\n                </Card>\n            </FadeTransform>\n        )\n    }\n    else {\n        return (\n            <div></div>\n        )\n    }\n}\n\n\nfunction RenderComments({ comments, postComments, dishId }) {\n    if (comments == null) {\n        return (<div></div>)\n    }\n    console.log(dishId)\n    const cmnts = comments.map((comment) => {\n        return (\n            <Fade in>\n            <li key={comment.id}>\n                <p>{comment.comment}</p>\n                <p>-- {comment.author},\n                &nbsp;\n                {new Intl.DateTimeFormat('en-US', {\n                    year: 'numeric',\n                    month: 'short',\n                    day: '2-digit'\n                }).format(new Date(comment.date))}\n                </p>\n            </li>\n            </Fade>\n        )\n    })\n    return (\n        <div className='col-12 col-md-5 m-1'>\n            <h4> Comments </h4>\n            <ul className='list-unstyled'>\n                <Stagger in>\n                    {cmnts}\n                </Stagger>\n            </ul>\n            <CommentForm dishId={dishId} postComments={postComments} />\n\n        </div>\n    )\n}\n\nconst DishDetail = (props) => {\n    console.log(props)\n    if (props.isloading) {\n        return (\n            <div className=\"container\">\n                <div className=\"row\">\n                    <Loading />\n                </div>\n            </div>\n        );\n    }\n    else if (props.errmess) {\n        return (\n            <div className=\"container\">\n                <div className=\"row\">\n                    <h4>{props.errmess}</h4>\n                </div>\n            </div>\n        );\n    }\n    else if (props.dish != null) {\n        return (\n            <div className=\"container\">\n                <div className='row'>\n                    <Breadcrumb>\n                        <BreadcrumbItem><Link to='/home'>Home</Link></BreadcrumbItem>\n                        <BreadcrumbItem><Link to='/menu'>Menu</Link></BreadcrumbItem>\n                        <BreadcrumbItem active>{props.dish.name}</BreadcrumbItem>\n                    </Breadcrumb>\n                    <div className='col-12'>\n                        <h3>{props.dish.name}</h3>\n                    </div>\n                </div>\n                <div className=\"row\">\n                    <div className=\"col-12 col-md-5 mt-1\">\n                        <RenderDishDetail dish={props.dish} />\n                    </div>\n                    <RenderComments comments={props.comments}\n                        postComments={props.postComments}\n                        dishId={props.dish.id}\n                    />\n\n                </div>\n            </div>\n\n        )\n    }\n\n\n}\n\nexport default DishDetail;","import React, { Component } from 'react';\r\nimport { Navbar, NavbarBrand, Nav, NavbarToggler, Collapse, NavItem, Jumbotron, Button, Modal, ModalBody, ModalHeader, Input, Form, Label } from 'reactstrap';\r\nimport { NavLink } from 'react-router-dom'\r\nimport FormGroup from 'reactstrap/lib/FormGroup';\r\n\r\nclass Header extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isNavOpen: false,\r\n            isModalOpen: false\r\n        };\r\n\r\n        this.togglenav = this.togglenav.bind(this);\r\n        this.toggleModal = this.toggleModal.bind(this);\r\n        this.handleLogin = this.handleLogin.bind(this);\r\n    }\r\n\r\n    togglenav() {\r\n        this.setState({\r\n            isNavOpen: !this.state.isNavOpen,\r\n        });\r\n\r\n    }\r\n\r\n    toggleModal() {\r\n        this.setState({\r\n            isModalOpen: !this.state.isModalOpen,\r\n        });\r\n    };\r\n\r\n    handleLogin(event) {\r\n        this.toggleModal();\r\n        alert(\"Username: \" + this.username.value + \"Password :\" + this.password.value +\r\n            \"Remember :\" + this.remember.checked);\r\n        event.preventDefault();\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <Navbar dark expand='md'>\r\n                    <div className=\"container\">\r\n                        <NavbarToggler onClick={this.togglenav} />\r\n                        <NavbarBrand className=\"mr-auto\" href=\"/\">\r\n                            <img src=\"assets/images/logo.png\" height=\"30\" width=\"41\" alt=\"Ristorante ConFusion\" />\r\n                        </NavbarBrand>\r\n                        <Collapse isOpen={this.state.isNavOpen} navbar>\r\n                            <Nav navbar>\r\n                                <NavItem>\r\n                                    <NavLink className=\"nav-link\" to=\"/home\"> <span className=\" fa fa-home fa-lg\"></span> Home</NavLink>\r\n                                </NavItem>\r\n                                <NavItem>\r\n                                    <NavLink className=\"nav-link\" to=\"/aboutus\"><span className=\"fa fa-info fa-lg\"></span> About Us</NavLink>\r\n                                </NavItem>\r\n                                <NavItem>\r\n                                    <NavLink className=\"nav-link\" to=\"/menu\"><span className=\"fa fa-list fa-lg\"></span> Menu</NavLink>\r\n                                </NavItem>\r\n                                <NavItem>\r\n                                    <NavLink className=\"nav-link\" to=\"/contactus\"><span className=\"fa fa-address-card fa-lg\"></span> Contact Us</NavLink>\r\n                                </NavItem>\r\n                                <NavItem>\r\n                                    <NavLink className=\"nav-link\" to=\"/hero\"><span className=\"fa fa-man fa-lg\"></span> Hero</NavLink>\r\n                                </NavItem>\r\n                            </Nav>\r\n                        </Collapse>\r\n                    </div>\r\n                    <Nav className=\"ml-auto\">\r\n                        <NavItem>\r\n                            <button outline onClick={this.toggleModal}>\r\n                                <span className=\"fa fa-sign-in fa-lg\"></span> Login\r\n                            </button>\r\n                        </NavItem>\r\n                    </Nav>\r\n                </Navbar>\r\n                <Jumbotron>\r\n                    <div className=\"container\">\r\n                        <div className=\"row row-header\">\r\n                            <div className=\"col-12 col-sm-6\">\r\n                                <h1>Ristorante con Fusion</h1>\r\n                                <p>We take inspiration from the World's best cuisines, and create a unique fusion experience. Our lipsmacking creations will tickle your culinary senses!</p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </Jumbotron>\r\n                <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\r\n                    <ModalHeader toggle={this.toggleModal}>Login</ModalHeader>\r\n                    <ModalBody>\r\n                        <Form onSubmit={this.handleLogin}>\r\n                            <FormGroup>\r\n                                <Label htmlFor=\"userName\">Username</Label>\r\n                                <Input type=\"text\" id=\"userName\" name=\"userName\" innerRef={(input) => this.username = (input)} />\r\n                            </FormGroup>\r\n\r\n                            <FormGroup>\r\n                                <Label htmlFor=\"password\">Password</Label>\r\n                                <Input type=\"password\" id=\"password\" name=\"password\" innerRef={(input) => this.password = (input)} />\r\n                            </FormGroup>\r\n                            <FormGroup check>\r\n                                <Label check>\r\n                                    <Input type=\"checkbox\" name=\"remember\" innerRef={(input) => this.remember = (input)} />\r\n                                    Remember Me\r\n                                </Label>\r\n                            </FormGroup>\r\n                            <Button color=\"primary\" type=\"submit\" onClick={this.handleLogin}>Login</Button>\r\n                        </Form>\r\n                    </ModalBody>\r\n                </Modal>\r\n\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport {Link} from 'react-router-dom'\r\n\r\nfunction Footer(props) {\r\n    return(\r\n    <div className=\"footer\">\r\n        <div className=\"container\">\r\n            <div className=\"row justify-content-center\">             \r\n                <div className=\"col-4 offset-1 col-sm-2\">\r\n                    <h5>Links</h5>\r\n                    <ul className=\"list-unstyled\">\r\n                        <li><Link to=\"/home\">Home</Link></li>\r\n                        <li><Link to=\"/aboutus\">About Us</Link></li>\r\n                        <li><Link to=\"/menu\">Menu</Link></li> \r\n                        <li><Link to=\"/contactus\">Contact Us</Link></li>\r\n                    </ul>\r\n                </div>\r\n                <div className=\"col-7 col-sm-5\">\r\n                    <h5>Our Address</h5>\r\n                    <address>\r\n\t\t              121, Clear Water Bay Road<br />\r\n\t\t              Clear Water Bay, Kowloon<br />\r\n\t\t              HONG KONG<br />\r\n\t\t              <i className=\"fa fa-phone fa-lg\"></i>: +852 1234 5678<br />\r\n\t\t              <i className=\"fa fa-fax fa-lg\"></i>: +852 8765 4321<br />\r\n\t\t              <i className=\"fa fa-envelope fa-lg\"></i>: <a href=\"mailto:confusion@food.net\">\r\n                         confusion@food.net</a>\r\n                    </address>\r\n                </div>\r\n                <div className=\"col-12 col-sm-4 align-self-center\">\r\n                    <div className=\"text-center\">\r\n                        <a className=\"btn btn-social-icon btn-google\" href=\"http://google.com/+\"><i className=\"fa fa-google-plus\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-facebook\" href=\"http://www.facebook.com/profile.php?id=\"><i className=\"fa fa-facebook\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-linkedin\" href=\"http://www.linkedin.com/in/\"><i className=\"fa fa-linkedin\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-twitter\" href=\"http://twitter.com/\"><i className=\"fa fa-twitter\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-google\" href=\"http://youtube.com/\"><i className=\"fa fa-youtube\"></i></a>\r\n                        <a className=\"btn btn-social-icon\" href=\"mailto:\"><i className=\"fa fa-envelope-o\"></i></a>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"row justify-content-center\">             \r\n                <div className=\"col-auto\">\r\n                    <p>© Copyright 2018 Ristorante Con Fusion</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default Footer;","import React, { Component } from 'react';\r\nimport { Breadcrumb, BreadcrumbItem, Button, Label,Col, Row } from 'reactstrap';\r\nimport { Link } from 'react-router-dom'\r\nimport { Control, Form, Errors} from 'react-redux-form'\r\n\r\n\r\n//Validation thru redux form\r\n\r\nconst required = (val) => val && val.length;\r\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\r\nconst minLength = (len) => (val) => !(val) || (val.length >= len);\r\nconst isNumber = (val) => !isNaN(Number(val));\r\nconst validEmail = (val) => /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val);\r\n\r\nclass Contact extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        // this.resetForm = this.resetForm.bind(this)\r\n    }\r\n\r\n    // resetForm() {\r\n    //     this.setState({\r\n    //         firstname: \"\",\r\n    //         lastname: \"\",\r\n    //         telnum: \"\",\r\n    //         email: \"\",\r\n    //         agree: \"\",\r\n    //         contactType: \"\",\r\n    //         message: \"\"\r\n    //     })\r\n    // }\r\n\r\n    handleSubmit(values) {\r\n        console.log(\"The Current State is \" + JSON.stringify(values));\r\n        this.props.postFeedback(values.firstname, values.lastname, values.telnum, values.email, values.agree, values.contactType, values.message )\r\n        this.props.resetFeedbackForm();\r\n\r\n    }\r\n\r\n\r\n    // validate(firstname, lastname, telnum, email) {\r\n    //     const errors = {\r\n    //         firstname: \"\",\r\n    //         lastname: \"\",\r\n    //         telnum: \"\",\r\n    //         email: \"\",\r\n    //     };\r\n\r\n    //     if (this.state.touched.firstname && firstname.length < 3)\r\n    //         errors.firstname = \"First Name Should be >=3\";\r\n    //     else if (this.state.touched.firstname && firstname.length > 10)\r\n    //         errors.firstname = \"First Name Should be <= 10\";\r\n\r\n    //     if (this.state.touched.lastname && lastname.length < 3)\r\n    //         errors.lastname = \"First Name Should be >=3\";\r\n    //     else if (this.state.touched.lastname && lastname.length > 10)\r\n    //         errors.lastname = \"First Name Should be <= 10\";\r\n\r\n    //     const reg = /^\\d+$/;\r\n    //     if (this.state.touched.telnum && !reg.test(telnum))\r\n    //         errors.telnum = \"Tel. Number should only contain Numbers\";\r\n\r\n    //     if (this.state.touched.email && email.split('').filter(x => x === \"@\").length !== 1)\r\n    //         errors.email = \"Email should contain a @\"\r\n\r\n    //     return errors;\r\n    // }\r\n    // Commented for changing to redux form\r\n\r\n    render() {\r\n        // Commented for redux form\r\n        // const errors = this.validate(this.state.firstname, this.state.lastname, this.state.telnum, this.state.email);\r\n        return (\r\n            <div className=\"container\">\r\n                <div className='row'>\r\n                    <Breadcrumb>\r\n                        <BreadcrumbItem><Link to='/home'>Home</Link></BreadcrumbItem>\r\n                        <BreadcrumbItem active><Link to='/contactus'>Contact Us</Link></BreadcrumbItem>\r\n                    </Breadcrumb>\r\n                    <div className='col-12'>\r\n                        <h3>Menu</h3>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row row-content\">\r\n                    <div className=\"col-12\">\r\n                        <h3>Location Information</h3>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-4 offset-sm-1\">\r\n                        <h5>Our Address</h5>\r\n                        <address>\r\n                            121, Clear Water Bay Road<br />\r\n                            Clear Water Bay, Kowloon<br />\r\n                            HONG KONG<br />\r\n                            <i className=\"fa fa-phone\"></i>: +852 1234 5678<br />\r\n                            <i className=\"fa fa-fax\"></i>: +852 8765 4321<br />\r\n                            <i className=\"fa fa-envelope\"></i>: <a href=\"mailto:confusion@food.net\">confusion@food.net</a>\r\n                        </address>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-6 offset-sm-1\">\r\n                        <h5>Map of our Location</h5>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-11 offset-sm-1\">\r\n                        <div className=\"btn-group\" role=\"group\">\r\n                            <a role=\"button\" className=\"btn btn-primary\" href=\"tel:+85212345678\"><i className=\"fa fa-phone\"></i> Call</a>\r\n                            <a role=\"button\" className=\"btn btn-info\" href=\"#\"><i className=\"fa fa-skype\"></i> Skype</a>\r\n                            <a role=\"button\" className=\"btn btn-success\" href=\"mailto:confusion@food.net\"><i className=\"fa fa-envelope-o\"></i> Email</a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row row-content\">\r\n                    <div className=\"col-12\">\r\n                        <h3>Send Us your feedback</h3>\r\n                    </div>\r\n                    <div className=\"col-12 col-md-9\">\r\n                        <Form model=\"feedback\" onSubmit={(values) => this.handleSubmit(values)}>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"firstname\" md={2}>First Name</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".firstname\" name='firstname' id=\"firstname\" placeholder=\"First Name\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, minlength: minLength(3), maxLength: maxLength(15)\r\n                                        }}\r\n                                    />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".firstname\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: \"Required\",\r\n                                            minlength: \" Must be greater than 2 character\",\r\n                                            maxLength: \" Must be less than 15 charecters or less\"\r\n                                        }}\r\n\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"lastname\" md={2}>Last Name</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".lastname\" name='lastname' id=\"lastname\" placeholder=\"Last Name\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, minlength: minLength(3), maxLength: maxLength(15)\r\n                                        }}\r\n                                    />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".lastname\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: \"Required\",\r\n                                            minlength: \" Must be greater than 2 character\",\r\n                                            maxLength: \" Must be less than 15 charecters or less\"\r\n                                        }}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"telnum\" md={2}>Telephone Number</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".telnum\" name='telnum' id=\"telnum\" placeholder=\"Phone Number\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, minlength: minLength(3), maxLength: maxLength(15), isNumber\r\n                                        }}\r\n                                    />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".telnum\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: \" Required\",\r\n                                            minlength: \" Must be greater than 2 Numbers\",\r\n                                            maxLength: \" Must be less than 15 charecters or less\",\r\n                                            isNumber : \" Must be a number\"\r\n                                        }}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"Email\" md={2}>Email</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".email\" name='email' id=\"email\" placeholder=\"Email ID\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, validEmail\r\n                                        }}\r\n                                    />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".email\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: \"Required\",\r\n                                            validEmail : \"Invalid Email Address\"\r\n                                        }}\r\n                                        />\r\n\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col md={{ size: 6, offset: 2 }}>\r\n                                    <div className=\"form-check\" check>\r\n                                        <Label check>\r\n                                            <Control.checkbox model=\".agree\" name=\"agree\"\r\n                                                className=\"form-check\"\r\n                                            /> {\" \"}\r\n                                            <strong>May We Contact you?</strong>\r\n                                        </Label>\r\n                                    </div>\r\n                                </Col>\r\n                                <Col md={{ size: 3, offset: 1 }}>\r\n                                    <Control.select model=\".contactType\" name=\"contactType\"\r\n                                        className=\"form-control\"\r\n                                    >\r\n                                        <option>Tel.</option>\r\n                                        <option>Email</option>\r\n                                    </Control.select>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"Feedback\" md={2}>Feedback</Label>\r\n                                <Col md={10}>\r\n                                    <Control.textarea model=\".message\" name='message' id=\"message\" placeholder=\"Email ID\" rows=\"12\"\r\n                                        className=\"form-control\"\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col md={{ size: 10, offset: 2 }}>\r\n                                    <Button type=\"submit\" color=\"primary\">\r\n                                        Send Feedback\r\n                                    </Button>\r\n                                </Col>\r\n                            </Row>\r\n                            {/* <FormGroup row>\r\n                                <Col md={{size:10, offset:2}}>\r\n                                    <Button onClick={this.resetForm} color=\"primary\" danger>\r\n                                        Reset Form\r\n                                    </Button>\r\n                                </Col>\r\n                            </FormGroup> */}\r\n\r\n                        </Form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default Contact;","import React from 'react';\r\nimport { Breadcrumb, BreadcrumbItem, Card, CardBody, CardHeader, Media } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport Loading from './loadingComponent'\r\nimport {Fade, Stagger } from 'react-animation-components'\r\n\r\n\r\n\r\nfunction RenderLeader({ leader }) {\r\n    return (\r\n        <Fade in>\r\n                       <div>\r\n                <div key={leader.id} className=\"col-12 mt-5\">\r\n                    <Media tag=\"li\">\r\n                        <Media left middle>\r\n                            <Media object src={leader.image} alt={leader.name} />\r\n                        </Media>\r\n                        <Media body className=\"ml-5\">\r\n                            <Media heading>{leader.name}</Media>\r\n                            <p>{leader.designation}</p>\r\n                            <p>{leader.description}</p>\r\n                        </Media>\r\n                    </Media>\r\n                </div>\r\n            </div>\r\n        </Fade>\r\n    );\r\n}\r\n\r\n\r\nfunction About(props) {\r\n\r\n    if (props.leaders.isLoading) {\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <Loading />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    else if (props.errmess) {\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <h4>{props.errmess}</h4>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    else if (props.leaders != null) {\r\n        console.log(\"I am Console\" + JSON.stringify(props.leaders))\r\n\r\n        const leaders = props.leaders.leaders.map((leader) => {\r\n            return (\r\n                <RenderLeader leader={leader} key={leader.id} />\r\n            );\r\n        });\r\n\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <Breadcrumb>\r\n                        <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\r\n                        <BreadcrumbItem active>About Us</BreadcrumbItem>\r\n                    </Breadcrumb>\r\n                    <div className=\"col-12\">\r\n                        <h3>About Us</h3>\r\n                        <hr />\r\n                    </div>\r\n                </div>\r\n                <div className=\"row row-content\">\r\n                    <div className=\"col-12 col-md-6\">\r\n                        <h2>Our History</h2>\r\n                        <p>Started in 2010, Ristorante con Fusion quickly established itself as a culinary icon par excellence in Hong Kong. With its unique brand of world fusion cuisine that can be found nowhere else, it enjoys patronage from the A-list clientele in Hong Kong.  Featuring four of the best three-star Michelin chefs in the world, you never know what will arrive on your plate the next time you visit us.</p>\r\n                        <p>The restaurant traces its humble beginnings to <em>The Frying Pan</em>, a successful chain started by our CEO, Mr. Peter Pan, that featured for the first time the world's best cuisines in a pan.</p>\r\n                    </div>\r\n                    <div className=\"col-12 col-md-5\">\r\n                        <Card>\r\n                            <CardHeader className=\"bg-primary text-white\">Facts At a Glance</CardHeader>\r\n                            <CardBody>\r\n                                <dl className=\"row p-1\">\r\n                                    <dt className=\"col-6\">Started</dt>\r\n                                    <dd className=\"col-6\">3 Feb. 2013</dd>\r\n                                    <dt className=\"col-6\">Major Stake Holder</dt>\r\n                                    <dd className=\"col-6\">HK Fine Foods Inc.</dd>\r\n                                    <dt className=\"col-6\">Last Year's Turnover</dt>\r\n                                    <dd className=\"col-6\">$1,250,375</dd>\r\n                                    <dt className=\"col-6\">Employees</dt>\r\n                                    <dd className=\"col-6\">40</dd>\r\n                                </dl>\r\n                            </CardBody>\r\n                        </Card>\r\n                    </div>\r\n                    <div className=\"col-12\">\r\n                        <Card>\r\n                            <CardBody className=\"bg-faded\">\r\n                                <blockquote className=\"blockquote\">\r\n                                    <p className=\"mb-0\">You better cut the pizza in four pieces because\r\n                                    I'm not hungry enough to eat six.</p>\r\n                                    <footer className=\"blockquote-footer\">Yogi Berra,\r\n                                <cite title=\"Source Title\">The Wit and Wisdom of Yogi Berra,\r\n                                    P. Pepe, Diversion Books, 2014</cite>\r\n                                    </footer>\r\n                                </blockquote>\r\n                            </CardBody>\r\n                        </Card>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row row-content\">\r\n                    <div className=\"col-12\">\r\n                        <h2>Corporate Leadership</h2>\r\n                    </div>\r\n                    <div className=\"col-12\">\r\n                        <Media list>\r\n                            <Stagger in>\r\n                            {leaders}\r\n                            </Stagger>\r\n                        </Media>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default About;    ","import * as ActionTypes from \"./Actiontypes\";\r\nimport { baseUrl } from '../shared/baseurl'\r\n\r\n\r\nexport const addComment = (comment) => ({\r\n    type: ActionTypes.ADD_COMMENT,\r\n    payload: comment\r\n});\r\n\r\nexport const postComments = (dishId, rating, author, comment) => (dispatch) => {\r\n    const newComment = {\r\n\r\n        dishId: dishId,\r\n        rating: rating,\r\n        author: author,\r\n        comment: comment\r\n    }\r\n    newComment.date = new Date().toISOString();\r\n    return fetch(baseUrl + 'comments', {\r\n        method: 'post',\r\n        body: JSON.stringify(newComment),\r\n        headers: {\r\n            'content-Type': 'application/JSON'\r\n        },\r\n        credentials: 'same-origin'\r\n    })\r\n        .then(response => {\r\n\r\n            if (response.ok) {\r\n                return response;\r\n            }\r\n            else {\r\n\r\n                var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n                error.response = response;\r\n                throw error;\r\n            }\r\n        },\r\n            error => {\r\n                var errmess = new Error(error.message);\r\n                throw errmess;\r\n\r\n            })\r\n        .then(response => response.json())\r\n        .then(response => dispatch(addComment(response)))\r\n        .catch(error => {\r\n            console.log('Post Comment :' + error.message)\r\n            alert(\"your Comment couldnt be posted\\nError:\" + error.message);\r\n        })\r\n\r\n}\r\n\r\n\r\nexport const postFeedback = (firstname, lastname, telnum, email, agree, contactType, message) =>{\r\n\r\n    const newFeedback = {\r\n        firstname: firstname,\r\n        lastname: lastname,\r\n        telnum: telnum,\r\n        email: email,\r\n        agree: agree,\r\n        contactType: contactType,\r\n        message: message\r\n    }\r\n    newFeedback.date = new Date().toISOString();\r\n    return fetch(baseUrl + 'feedback', {\r\n        method: 'post',\r\n        body: JSON.stringify(newFeedback),\r\n        headers: {\r\n            'content-Type': 'application/JSON'\r\n        },\r\n        credentials: 'same-origin'\r\n    })\r\n        .then(response => {\r\n\r\n            if (response.ok) {\r\n                return response;\r\n            }\r\n            else {\r\n\r\n                var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n                error.response = response;\r\n                throw error;\r\n            }\r\n        },\r\n            error => {\r\n                var errmess = new Error(error.message);\r\n                throw errmess;\r\n\r\n            })\r\n        .then(response => response.json())\r\n        .then(response => alert(\"Thank You for your feedback \" + JSON.stringify(response)))\r\n        .catch(error => {\r\n            console.log('Post feedback :' + error.message)\r\n            alert(\"your feedback couldnt be posted\\nError:\" + error.message);\r\n        })\r\n\r\n}\r\n\r\nexport const fetchDishes = () => (dispatch) => {\r\n    dispatch(dishesLoading(true));\r\n\r\n    return fetch(baseUrl + 'dishes')\r\n        .then(response => {\r\n            if (response.ok) {\r\n                return response;\r\n            }\r\n            else {\r\n                var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n                error.response = response;\r\n                throw error;\r\n            }\r\n        },\r\n            error => {\r\n                var errmess = new Error(error.message);\r\n                throw errmess;\r\n\r\n            })\r\n        .then(response => response.json())\r\n        .then(dishes => dispatch(addDishes(dishes)))\r\n        .catch(error => dispatch(dishesFailed(error.message)))\r\n\r\n}\r\n\r\nexport const dishesLoading = () => ({\r\n    type: ActionTypes.DISHES_LOADING\r\n});\r\n\r\nexport const dishesFailed = (errmess) => ({\r\n    type: ActionTypes.DISHES_FAILED,\r\n    payload: errmess\r\n})\r\n\r\nexport const addDishes = (dishes) => ({\r\n    type: ActionTypes.ADD_DISHES,\r\n    payload: dishes\r\n});\r\n\r\n// export const fetchComments = ( ) => (dispatch) => {\r\n\r\n//     return fetch(baseUrl + 'comments')\r\n//     .then(response =>{\r\n//         if(response.ok) {\r\n//             return response;\r\n//         }\r\n//         else{\r\n//             var error = new Error('Error ' + response.status + ': ' + response.statusText)\r\n//             error.response = response;\r\n//             throw error;\r\n//         }\r\n//     },\r\n//     error => {\r\n//         var errmess = new Error(error.message);\r\n//         throw errmess;\r\n\r\n//     })\r\n//         .then(response => response.json())\r\n//         .then(comments => dispatch(addComments(comments)))\r\n//         .catch(error => dispatch(commentsFailed(error.message)))\r\n// }\r\nexport const fetchComments = () => (dispatch) => {\r\n    // console.log(dispatch, 'dispatch')\r\n    return fetch(baseUrl + 'comments')\r\n        .then(response => {\r\n            if (response.ok) {\r\n                return response;\r\n            } else {\r\n                var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n                error.response = response;\r\n                throw error;\r\n            }\r\n        },\r\n            error => {\r\n                var errmess = new Error(error.message);\r\n                throw errmess;\r\n            })\r\n        .then(response => response.json())\r\n        .then(comments => dispatch(addComments(comments)))\r\n        .catch(error => dispatch(commentsFailed(error.message)));\r\n};\r\n\r\n\r\nexport const commentsFailed = (errmess) => ({\r\n    type: ActionTypes.COMMENTS_FAILED,\r\n    payload: errmess\r\n})\r\n\r\nexport const addComments = (comments) => ({\r\n    type: ActionTypes.ADD_COMMENTS,\r\n    payload: comments\r\n});\r\n\r\n// export const fetchPromos = ( ) => (dispatch) => {\r\n//     dispatch(promosLoading(true));\r\n\r\n//     return fetch(baseUrl + 'promotions')\r\n//     .then(response =>{\r\n//         if(response.ok) {\r\n//             return response;\r\n//         }\r\n//         else{\r\n//             var error = new Error('Error ' + response.status + ': ' + response.statusText)\r\n//             error.response = response;\r\n//             throw error;\r\n//         }\r\n//     },\r\n//     error => {\r\n//         var errmess = new Error(error.message);\r\n//         throw errmess;\r\n\r\n//     })\r\n//         .then(response => response.json())\r\n//         .then(promos => dispatch(addPromos(promos)))\r\n//         .catch(error => dispatch(promosFailed(error.message)))\r\n// }\r\n\r\nexport const fetchPromos = () => (dispatch) => {\r\n\r\n    dispatch(promosLoading());\r\n\r\n    return fetch(baseUrl + 'promotions')\r\n        .then(response => {\r\n            if (response.ok) {\r\n                return response;\r\n            } else {\r\n                var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n                error.response = response;\r\n                throw error;\r\n            }\r\n        },\r\n            error => {\r\n                var errmess = new Error(error.message);\r\n                throw errmess;\r\n            })\r\n        .then(response => response.json())\r\n        .then(promos => dispatch(addPromos(promos)))\r\n        .catch(error => dispatch(promosFailed(error.message)));\r\n}\r\n\r\n\r\n\r\nexport const promosLoading = () => ({\r\n    type: ActionTypes.PROMOS_LOADING\r\n});\r\n\r\nexport const promosFailed = (errmess) => ({\r\n    type: ActionTypes.PROMOS_FAILED,\r\n    payload: errmess\r\n})\r\n\r\nexport const addPromos = (promos) => ({\r\n    type: ActionTypes.ADD_PROMOS,\r\n    payload: promos\r\n});\r\n\r\n\r\n\r\n////**---------------------------------------------- */\r\n\r\n\r\n\r\nexport const fetchLeaders = () => (dispatch) => {\r\n\r\n    dispatch(leadersLoading());\r\n\r\n    return fetch(baseUrl + 'leaders')\r\n        .then(response => {\r\n            if (response.ok) {\r\n                console.log(\"This is \" + response)\r\n                return response;\r\n\r\n            } else {\r\n                var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n                error.response = response;\r\n                throw error;\r\n            }\r\n        },\r\n            error => {\r\n                var errmess = new Error(error.message);\r\n                throw errmess;\r\n            })\r\n        .then(response => response.json())\r\n        .then(leaders => dispatch(addLeaders(leaders)))\r\n        .catch(error => dispatch(leadersFailed(error.message)));\r\n\r\n}\r\n\r\nexport const leadersLoading = () => ({\r\n    type: ActionTypes.LEADERS_LOADING\r\n});\r\n\r\nexport const leadersFailed = (errmess) => ({\r\n    type: ActionTypes.LEADERS_FAILED,\r\n    payload: errmess\r\n})\r\n\r\nexport const addLeaders = (leaders) => ({\r\n    type: ActionTypes.ADD_LEADERS,\r\n    payload: leaders\r\n});\r\n","export const ADD_COMMENT = 'ADD_COMMENT';\r\nexport const DISHES_LOADING = 'DISHES_LOADING';\r\nexport const DISHES_FAILED = 'DISHES_FAILED';\r\nexport const ADD_DISHES = 'ADD_DISHES';\r\nexport const ADD_COMMENTS = 'ADD_COMMENTS';\r\nexport const COMMENTS_FAILED = 'COMMENTS_FAILED';\r\nexport const PROMOS_LOADING = 'PROMOS_LOADING';\r\nexport const ADD_PROMOS = 'ADD_PROMOS';\r\nexport const PROMOS_FAILED = 'PROMOS_FAILED';\r\nexport const ADD_LEADERS = 'ADD_LEADERS'\r\nexport const LEADERS_LOADING = 'PROMOS_LOADING';\r\nexport const LEADERS_FAILED = 'LEADERS_FAILED';\r\n","import React, { Component } from 'react'\r\nimport Home from './homeComponent'\r\nimport Menu from './menuComponenet'\r\nimport DishDetail from './dishDetailComponenet'\r\nimport Header from './headerComponent'\r\nimport Footer from './footerComponent'\r\nimport Contact from './contactComponent'\r\nimport About from \"./aboutComponent\"\r\nimport { Switch, Route, Redirect, withRouter } from \"react-router-dom\"\r\nimport {connect} from 'react-redux'\r\nimport {postFeedback,postComments, fetchDishes, fetchComments, fetchPromos, fetchLeaders} from '../Redux/ActionCreators';\r\nimport {actions} from 'react-redux-form';\r\nimport {TransitionGroup, CSSTransition} from 'react-transition-group'\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    postComments: (dsihId, rating, author, comment) => dispatch(postComments(dsihId, rating, author, comment)),\r\n    fetchDishes: () => {dispatch(fetchDishes())},\r\n    resetFeedbackForm: () => {dispatch(actions.reset('feedback'))},\r\n    fetchComments: () => {dispatch(fetchComments())},\r\n    fetchPromos: () => {dispatch(fetchPromos())},\r\n    fetchLeaders:() => {dispatch(fetchLeaders())},\r\n    postFeedback:(firstname, lastname, telnum, email, agree, contactType, message) => postFeedback(firstname, lastname, telnum, email, agree, contactType, message)\r\n});\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    return{\r\n      dishes: state.dishes,\r\n      comments: state.comments,\r\n      promotions : state.promotions,\r\n      leaders: state.leaders\r\n    }\r\n}\r\n\r\nclass Main extends Component {\r\n\r\n  componentDidMount() {\r\n    this.props.fetchDishes();\r\n    this.props.fetchComments();\r\n    this.props.fetchPromos();\r\n    this.props.fetchLeaders();\r\n\r\n  }\r\n\r\n  onDishSelect(dishId) {\r\n    this.setState({ selectedDish: dishId });\r\n  }\r\n\r\n\r\n  render() {\r\n    const HomePage = () => {\r\n      return (\r\n        <Home dish={this.props.dishes.dishes.filter((dish) => dish.featured)[0]}\r\n          dishesLoading = {this.props.dishes.isLoading}\r\n          dishesErrmess = {this.props.dishes.errmess}\r\n          promotion={this.props.promotions.promotions.filter((promo) => promo.featured)[0]}\r\n          promosLoading = {this.props.promotions.isLoading}\r\n          promosErrmess = {this.props.promotions.errmess}\r\n          leader={this.props.leaders.leaders.filter((leader) => leader.featured)[0]}\r\n          leadersLoading = {this.props.leaders.isLoading}\r\n          leadersErrmess = {this.props.leaders.errmess}\r\n           />\r\n\r\n      );\r\n    }\r\n\r\n    const DishWithID = ({match}) => {\r\n      return(\r\n        <DishDetail dish = {this.props.dishes.dishes.filter((dish) => dish.id === parseInt(match.params.dishId,10))[0]}\r\n          isloading = {this.props.dishes.isLoading}\r\n          errmess = {this.props.dishes.errmess}\r\n          comments = {this.props.comments.comments.filter((comment) => comment.dishId === parseInt(match.params.dishId,10))}\r\n          commentsErrmess = {this.props.comments.errmess}\r\n          postComments = {this.props.postComments}\r\n          />\r\n          \r\n      );}\r\n\r\n\r\n\r\n      const AboutUs = () => {\r\n        return(\r\n          <About leaders = {this.props.leaders} />\r\n        )\r\n      }\r\n\r\n    return (\r\n      <div>\r\n        <Header />\r\n        <TransitionGroup>\r\n          <CSSTransition key={this.props.location.key} classNames='page' timeout={300}>\r\n        <Switch>\r\n          <Route path='/home' component={HomePage} />\r\n          <Route exact path=\"/menu\" component={() => <Menu dishes={this.props.dishes} />} />\r\n          <Route exact path=\"/contactus\" component={() => <Contact postFeedback = {this.props.postFeedback} resetFeedbackForm = {this.props.resetFeedbackForm}/> } />\r\n          <Route path=\"/menu/:dishId\" component={DishWithID} />\r\n          <Route path='/aboutus' component={AboutUs} />\r\n          {/* <Route path='/hero' component={Hero} /> */}\r\n          <Redirect to=\"/home\" />\r\n        </Switch>\r\n        </CSSTransition>\r\n        </TransitionGroup>\r\n        <Footer />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Main));\r\n\r\n","import * as ActionTypes from \"./Actiontypes\";\r\n\r\nexport const Dishes = (state = {\r\n    isLoading: true,\r\n    errmess : null,\r\n    dishes: []\r\n    }, action) => {\r\n    switch(action.type) {\r\n        case ActionTypes.ADD_DISHES:\r\n            return{...state, isLoading:false, errmess:null, dishes:action.payload}\r\n\r\n        case ActionTypes.DISHES_LOADING:\r\n            return{...state, isLoading:true, errmess:null, dishes:[]}\r\n\r\n        case ActionTypes.DISHES_FAILED:\r\n            return{...state, isLoading:false, errmess:action.payload, dishes:[]}\r\n\r\n\r\n        default: \r\n            return state;\r\n    }\r\n}","import * as ActionTypes from \"./Actiontypes\";\r\n\r\n\r\n\r\nexport const Promotions = (state = {\r\n        isLoading: true,\r\n        errmess : null,\r\n        promotions: []\r\n}, action) => {\r\n    switch(action.type) {\r\n\r\n        case ActionTypes.ADD_PROMOS:\r\n            return{...state, isLoading:false, errmess:null, promotions:action.payload}\r\n\r\n        case ActionTypes.PROMOS_LOADING:\r\n            return{...state, isLoading:true, errmess:null, promotions:[]}\r\n\r\n        case ActionTypes.PROMOS_FAILED:\r\n            return{...state, isLoading:false, errmess:action.payload, promotions:[]}\r\n\r\n        default: \r\n            return state;\r\n    }\r\n}\r\n","// import { LEADERS } from \"../shared/leaders\"\r\n\r\nimport * as ActionTypes from \"./Actiontypes\";\r\n\r\n\r\nexport const Leaders = (state = {\r\n        isLoading: true,\r\n        errmess: null,\r\n        leaders: []\r\n}, action) => {\r\n    switch(action.type) {\r\n        case ActionTypes.ADD_LEADERS:\r\n            return{...state, isLoading:false, errmess:null, leaders:action.payload}\r\n    \r\n        case ActionTypes.LEADERS_LOADING:\r\n            return{...state, isLoading:true, errmess:null, leaders:[]}\r\n    \r\n        case ActionTypes.LEADERS_FAILED:\r\n            return{...state, isLoading:false, errmess:action.payload, leaders:[]}\r\n\r\n        default: \r\n            return state;\r\n    }\r\n}\r\n\r\n\r\n","import * as ActionTypes from './Actiontypes';\r\n\r\n\r\nexport const Comments = (state = {\r\n        errMess: null,\r\n        comments: []\r\n}, action) => {\r\n    switch (action.type) {\r\n        case ActionTypes.ADD_COMMENTS:\r\n            return{...state, isLoading:false, errmess:null, comments:action.payload}\r\n\r\n        case ActionTypes.COMMENTS_FAILED:\r\n                return{...state, isLoading:false, errmess:action.payload, comments:[]}\r\n\r\n        case ActionTypes.ADD_COMMENT:\r\n            var comment = action.payload;\r\n            console.log(state.comments.concat(comment));\r\n            return {...state, comments: state.comments.concat(comment)};\r\n        default :\r\n            return state;\r\n    \r\n    }\r\n};\r\n\r\n","\r\n\r\n\r\nexport const InitialFeedback = {\r\n    firstname: \"\",\r\n    lastname: \"\",\r\n    telnum: \"\",\r\n    email: \"\",\r\n    agree: false,\r\n    contactType: \"tel.\",\r\n    message: \"\"\r\n\r\n}","import {createStore, combineReducers, applyMiddleware} from 'redux';\r\nimport {createForms} from 'react-redux-form'\r\nimport {Dishes} from \"./dishes\";\r\nimport {Promotions} from \"./promotions\";\r\nimport {Leaders} from \"./leaders\";\r\nimport {Comments} from \"./comments\";\r\nimport thunk from 'redux-thunk';\r\nimport logger from 'redux-logger';\r\nimport { InitialFeedback } from './forms';\r\n\r\n\r\nexport const ConfigureStore= () => {\r\n    \r\n    const store = createStore(\r\n       combineReducers({\r\n           dishes : Dishes,\r\n           promotions :Promotions,\r\n           leaders: Leaders,\r\n           comments : Comments,\r\n           ...createForms({\r\n               feedback: InitialFeedback\r\n           })\r\n       }),\r\n       applyMiddleware(thunk,logger)\r\n    );\r\n\r\n    return store;\r\n}\r\n\r\n\r\n\r\n\r\n","import React, { Component } from 'react';\nimport './App.css';\nimport Main from './components/mainComponent'\nimport {BrowserRouter} from \"react-router-dom\"\nimport {Provider} from 'react-redux'\nimport {ConfigureStore} from './Redux/configureStore'\n\nconst store = ConfigureStore();\n\n\nclass App extends Component {\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Provider store = {store}>\n        <BrowserRouter>\n        <div>\n        <Main/>\n        </div>\n        </BrowserRouter>\n        </Provider>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport 'font-awesome/css/font-awesome.css';\r\nimport 'bootstrap-social/bootstrap-social.css';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}